{"version":3,"sources":["webpack:///./src/pages/blog.tsx","webpack:///./src/components/post-list-item.tsx"],"names":["pageQuery","Blog","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","theme","style","listStyle","map","post","key","fields","slug","to","itemProp","Header","styled","header","spacing","Headline","h2","fonts","serif","fontSize","colors","primary","Dateline","p","Section","section","Description","Article","article","text","backgroundLight","primaryLight","textLight","PostListItem","frontmatter","itemScope","itemType","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"6FAAA,0LAWMA,EAAY,aAwCZC,EAAO,SAAC,GAA8B,MAA5BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SACdC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAeC,MAAOA,KACpB,kBAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,SACX,wBAAIK,MAAO,CAAEC,UAAW,SACrBL,EAAMM,KAAI,SAACC,GAAD,OACT,wBAAIC,IAAKD,EAAKE,OAAOC,MACnB,kBAAC,OAAD,CAAMC,GAAE,QAAUJ,EAAKE,OAAOC,KAAQE,SAAS,OAC7C,kBAAC,IAAD,CAAcL,KAAMA,c,kCC/DpC,6DAQMM,EAASC,IAAOC,OAAV,yEAAGD,CAAH,uBACOE,IAAQ,IAGrBC,EAAWH,IAAOI,GAAV,2EAAGJ,CAAH,4EACGX,IAAMgB,MAAMC,MACdC,IAAS,GACblB,IAAMmB,OAAOC,QACLP,IAAQ,IAIrBQ,EAAWV,IAAOW,EAAV,2EAAGX,CAAH,mCACGX,IAAMgB,MAAMC,MACdC,IAAS,IAGlBK,EAAUZ,IAAOa,QAAV,0EAAGb,CAAH,sBAIPc,EAAcd,IAAOW,EAAV,8EAAGX,CAAH,MAEXe,EAAUf,IAAOgB,QAAV,0EAAGhB,CAAH,0LACME,IAAQ,GACXA,IAAQ,GACXA,IAAQ,GAEVb,IAAMmB,OAAOS,KAMA5B,IAAMmB,OAAOU,gBAC/Bf,EACSd,IAAMmB,OAAOW,aAEtBT,EACSrB,IAAMmB,OAAOY,UAEtBN,EACSzB,IAAMmB,OAAOY,WAgCbC,IAvBM,SAAC,GAAoB,IAAlB5B,EAAkB,EAAlBA,KAChBR,EAAQQ,EAAK6B,YAAYrC,OAASQ,EAAKE,OAAOC,KACpD,OACE,kBAACmB,EAAD,CAASQ,WAAS,EAACC,SAAS,6BAC1B,kBAACzB,EAAD,KACE,kBAACI,EAAD,KAEE,0BAAML,SAAS,YAAYb,IAE7B,kBAACyB,EAAD,KAAWjB,EAAK6B,YAAYG,OAE9B,kBAACb,EAAD,KACE,kBAACE,EAAD,CACEY,wBAAyB,CACvBC,OAAQlC,EAAK6B,YAAYM,aAAenC,EAAKoC,SAE/C/B,SAAS","file":"component---src-pages-blog-tsx-d5c4ef95baaf8bdc313b.js","sourcesContent":["import React from \"react\";\r\nimport { Link, graphql, PageProps } from \"gatsby\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\n\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport theme from \"../common/theme\";\r\nimport { MarkdownRemarkNode } from \"../common/types\";\r\nimport PostListItem from \"../components/post-list-item\";\r\n\r\nconst pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/blog/\" } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Props extends PageProps {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      nodes: MarkdownRemarkNode[];\r\n    };\r\n    site: {\r\n      siteMetadata: {\r\n        title: string;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\n// TODO: compact/archive view\r\nconst Blog = ({ data, location }: Props) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\r\n  const posts = data.allMarkdownRemark.nodes;\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Layout location={location} title={siteTitle}>\r\n        <SEO title=\"Blog\" />\r\n        <ol style={{ listStyle: `none` }}>\r\n          {posts.map((post: MarkdownRemarkNode) => (\r\n            <li key={post.fields.slug}>\r\n              <Link to={`/blog${post.fields.slug}`} itemProp=\"url\">\r\n                <PostListItem post={post} />\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </Layout>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport { Blog as default, pageQuery };\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { spacing, fontSize } from \"../common\";\r\nimport theme from \"../common/theme\";\r\nimport { MarkdownRemarkNode } from \"../common/types\";\r\n\r\nconst Header = styled.header`\r\n  margin-bottom: ${spacing[4]};\r\n`;\r\n\r\nconst Headline = styled.h2`\r\n  font-family: ${theme.fonts.serif};\r\n  font-size: ${fontSize[3]};\r\n  color: ${theme.colors.primary};\r\n  margin-bottom: ${spacing[1]};\r\n  margin-top: 0;\r\n`;\r\n\r\nconst Dateline = styled.p`\r\n  font-family: ${theme.fonts.serif};\r\n  font-size: ${fontSize[0]};\r\n`;\r\n\r\nconst Section = styled.section`\r\n  margin-bottom: 0;\r\n`;\r\n\r\nconst Description = styled.p``;\r\n\r\nconst Article = styled.article`\r\n  margin-bottom: ${spacing[4]};\r\n  margin-top: ${spacing[4]};\r\n  padding: ${spacing[4]};\r\n  border-radius: 4px;\r\n  color: ${theme.colors.text};\r\n\r\n  transition: background-color 0.1s;\r\n\r\n  // x:hover and x :hover are not the same.\r\n  &:hover {\r\n    background-color: ${theme.colors.backgroundLight};\r\n    ${Headline} {\r\n      color: ${theme.colors.primaryLight};\r\n    }\r\n    ${Dateline} {\r\n      color: ${theme.colors.textLight};\r\n    }\r\n    ${Description} {\r\n      color: ${theme.colors.textLight};\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  post: MarkdownRemarkNode;\r\n}\r\n\r\nconst PostListItem = ({ post }: Props) => {\r\n  const title = post.frontmatter.title || post.fields.slug;\r\n  return (\r\n    <Article itemScope itemType=\"http://schema.org/Article\">\r\n      <Header>\r\n        <Headline>\r\n          {/* relative link to e.g. /posts/post1-slug/ */}\r\n          <span itemProp=\"headline\">{title}</span>\r\n        </Headline>\r\n        <Dateline>{post.frontmatter.date}</Dateline>\r\n      </Header>\r\n      <Section>\r\n        <Description\r\n          dangerouslySetInnerHTML={{\r\n            __html: post.frontmatter.description || post.excerpt,\r\n          }}\r\n          itemProp=\"description\"\r\n        />\r\n      </Section>\r\n    </Article>\r\n  );\r\n};\r\n\r\nexport default PostListItem;\r\n"],"sourceRoot":""}