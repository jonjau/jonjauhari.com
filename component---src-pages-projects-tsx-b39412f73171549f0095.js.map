{"version":3,"sources":["webpack:///./src/pages/projects.tsx"],"names":["pageQuery","Projects","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","style","listStyle","map","post","frontmatter","fields","slug","key","className","itemScope","itemType","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"2FAAA,sJAMMA,EAAY,aAkDZC,EAAW,SAAC,GAA8B,MAA5BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAClBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,aACX,wBAAII,MAAO,CAAEC,UAAW,SACrBJ,EAAMK,KAAI,SAACC,GACV,IAAMP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KAEpD,OACE,wBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,6BACEE,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,gCACE,4BACE,kBAAC,OAAD,CAAMC,GAAE,YAAcR,EAAKE,OAAOC,KAAQM,SAAS,OACjD,0BAAMA,SAAS,YAAYhB,KAG/B,+BAAQO,EAAKC,YAAYS,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAE/CL,SAAS","file":"component---src-pages-projects-tsx-b39412f73171549f0095.js","sourcesContent":["import React from \"react\";\r\nimport { Link, graphql, PageProps } from \"gatsby\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\n\r\nconst pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      filter: {fileAbsolutePath: {regex: \"/projects/\"}}\r\n      sort: { fields: [frontmatter___date], order: DESC }) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface MarkdownRemarkNode {\r\n  excerpt: string;\r\n  fields: {\r\n    slug: string;\r\n  };\r\n  frontmatter: {\r\n    date: Date;\r\n    title: string;\r\n    description: string;\r\n  };\r\n}\r\n\r\ninterface Props extends PageProps {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      nodes: MarkdownRemarkNode[];\r\n    };\r\n    site: {\r\n      siteMetadata: {\r\n        title: string;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\nconst Projects = ({ data, location }: Props) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\r\n  const posts = data.allMarkdownRemark.nodes;\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO title=\"Projects\" />\r\n      <ol style={{ listStyle: `none` }}>\r\n        {posts.map((post: MarkdownRemarkNode) => {\r\n          const title = post.frontmatter.title || post.fields.slug;\r\n\r\n          return (\r\n            <li key={post.fields.slug}>\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemScope\r\n                itemType=\"http://schema.org/Article\"\r\n              >\r\n                <header>\r\n                  <h2>\r\n                    <Link to={`/projects${post.fields.slug}`} itemProp=\"url\">\r\n                      <span itemProp=\"headline\">{title}</span>\r\n                    </Link>\r\n                  </h2>\r\n                  <small>{post.frontmatter.date}</small>\r\n                </header>\r\n                <section>\r\n                  <p\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: post.frontmatter.description || post.excerpt,\r\n                    }}\r\n                    itemProp=\"description\"\r\n                  />\r\n                </section>\r\n              </article>\r\n            </li>\r\n          );\r\n        })}\r\n      </ol>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport { Projects as default, pageQuery };"],"sourceRoot":""}