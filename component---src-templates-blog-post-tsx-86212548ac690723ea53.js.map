{"version":3,"sources":["webpack:///./src/templates/blog-post.tsx"],"names":["Article","styled","article","FooterNextPrevious","nav","pageQuery","BlogPost","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","to","fields","slug","rel"],"mappings":"2FAAA,kKAOMA,EAAUC,IAAOC,QAAV,yEAAGD,CAAH,4JAaPE,EAAqBF,IAAOG,IAAV,oFAAGH,CAAH,sHAWlBI,EAAY,aAuDZC,EAAW,SAAC,GAA8B,MAA5BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAClBC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAGlB,OACE,kBAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOL,EAAKQ,YAAYH,MACxBI,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,UAEpD,kBAACnB,EAAD,CAASoB,WAAS,EAACC,SAAS,6BAC1B,gCACE,wBAAIC,SAAS,YAAYb,EAAKQ,YAAYH,OAC1C,2BAAIL,EAAKQ,YAAYM,OAEvB,6BACEC,wBAAyB,CAAEC,OAAQhB,EAAKiB,MACxCJ,SAAS,gBAEX,8BAEF,kBAACnB,EAAD,KACE,4BAEE,4BACGY,GACC,kBAAC,OAAD,CAAMY,GAAE,QAAUZ,EAASa,OAAOC,KAAQC,IAAI,QAA9C,KACKf,EAASE,YAAYH,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMW,GAAE,QAAUX,EAAKY,OAAOC,KAAQC,IAAI,QACvCd,EAAKC,YAAYH,MADpB","file":"component---src-templates-blog-post-tsx-86212548ac690723ea53.js","sourcesContent":["import React from \"react\";\r\nimport { Link, graphql } from \"gatsby\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\n\r\nconst Article = styled.article`\r\n  header {\r\n    h1 {\r\n      margin: var(--spacing-0) var(--spacing-0) var(--spacing-4)\r\n        var(--spacing-0);\r\n    }\r\n    p {\r\n      font-size: var(--fontSize-3);\r\n      font-family: var(--font-heading);\r\n    }\r\n  }\r\n`;\r\n\r\nconst FooterNextPrevious = styled.nav`\r\n  ul {\r\n    margin: var(--spacing-0);\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    list-style: none;\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  location: Location;\r\n  data: {\r\n    markdownRemark: any;\r\n    site: {\r\n      siteMetadata: {\r\n        title: string;\r\n      };\r\n    };\r\n    previous: any;\r\n    next: any;\r\n  };\r\n  pageContext: any;\r\n}\r\n\r\nconst BlogPost = ({ data, location }: Props) => {\r\n  const post = data.markdownRemark;\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\r\n  const { previous, next } = data;\r\n\r\n  // TODO: time to read, table of contents, tags\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO\r\n        title={post.frontmatter.title}\r\n        description={post.frontmatter.description || post.excerpt}\r\n      />\r\n      <Article itemScope itemType=\"http://schema.org/Article\">\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n          <p>{post.frontmatter.date}</p>\r\n        </header>\r\n        <section\r\n          dangerouslySetInnerHTML={{ __html: post.html }}\r\n          itemProp=\"articleBody\"\r\n        />\r\n        <hr />\r\n      </Article>\r\n      <FooterNextPrevious>\r\n        <ul>\r\n          {/* TODO: make these stack */}\r\n          <li>\r\n            {previous && (\r\n              <Link to={`/blog${previous.fields.slug}`} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={`/blog${next.fields.slug}`} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </FooterNextPrevious>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport { BlogPost as default, pageQuery };\r\n"],"sourceRoot":""}