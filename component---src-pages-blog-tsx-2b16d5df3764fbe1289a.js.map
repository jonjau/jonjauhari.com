{"version":3,"sources":["webpack:///./src/pages/blog.tsx","webpack:///./src/components/post-list.tsx","webpack:///./src/components/post-list-item.tsx"],"names":["pageQuery","Blog","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","map","post","key","fields","slug","to","itemProp","PostList","styled","ol","Header","header","spacing","Headline","h2","theme","fonts","serif","fontSize","colors","primary","Dateline","p","Section","section","Description","Article","article","text","backgroundLight","devices","tablet_portrait","background","primaryLight","textLight","PostListItem","frontmatter","itemScope","itemType","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"6FAAA,8KAUMA,EAAY,aAwCZC,EAAO,SAAC,GAA8B,MAA5BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SACdC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,SACX,kBAAC,IAAD,KACGC,EAAMG,KAAI,SAACC,GAAD,OACT,wBAAIC,IAAKD,EAAKE,OAAOC,MACnB,kBAAC,OAAD,CAAMC,GAAE,QAAUJ,EAAKE,OAAOC,KAAQE,SAAS,OAC7C,kBAAC,IAAD,CAAcL,KAAMA,a,kCC7DlC,IAEMM,EAFN,UAEiBC,EAAOC,GAAV,yEAAGD,CAAH,8CAOCD,O,kCCTf,yEASMG,EAASF,IAAOG,OAAV,yEAAGH,CAAH,uBACOI,IAAQ,IAGrBC,EAAWL,IAAOM,GAAV,2EAAGN,CAAH,gGACGO,IAAMC,MAAMC,MACdC,IAAS,GAEbH,IAAMI,OAAOC,QACLR,IAAQ,IAIrBS,EAAWb,IAAOc,EAAV,2EAAGd,CAAH,mCACGO,IAAMC,MAAMC,MACdC,IAAS,IAGlBK,EAAUf,IAAOgB,QAAV,0EAAGhB,CAAH,sBAIPiB,EAAcjB,IAAOc,EAAV,8EAAGd,CAAH,MAEXkB,EAAUlB,IAAOmB,QAAV,0EAAGnB,CAAH,gPACMI,IAAQ,GACXA,IAAQ,GACXA,IAAQ,GAEVG,IAAMI,OAAOS,KAIFb,IAAMI,OAAOU,gBACxBC,IAAQC,gBACKhB,IAAMI,OAAOa,WAKbjB,IAAMI,OAAOU,gBAC/BhB,EACSE,IAAMI,OAAOc,aAEtBZ,EACSN,IAAMI,OAAOe,UAEtBT,EACSV,IAAMI,OAAOe,WAgCbC,IAvBM,SAAC,GAAoB,IAAlBlC,EAAkB,EAAlBA,KAChBL,EAAQK,EAAKmC,YAAYxC,OAASK,EAAKE,OAAOC,KACpD,OACE,kBAACsB,EAAD,CAASW,WAAS,EAACC,SAAS,6BAC1B,kBAAC5B,EAAD,KACE,kBAACG,EAAD,KAEE,0BAAMP,SAAS,YAAYV,IAE7B,kBAACyB,EAAD,KAAWpB,EAAKmC,YAAYG,OAE9B,kBAAChB,EAAD,KACE,kBAACE,EAAD,CACEe,wBAAyB,CACvBC,OAAQxC,EAAKmC,YAAYM,aAAezC,EAAK0C,SAE/CrC,SAAS","file":"component---src-pages-blog-tsx-2b16d5df3764fbe1289a.js","sourcesContent":["import React from \"react\";\r\nimport { Link, graphql, PageProps } from \"gatsby\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\n\r\nimport { MarkdownRemarkNode } from \"../common/types\";\r\nimport PostListItem from \"../components/post-list-item\";\r\nimport PostList from \"../components/post-list\";\r\n\r\nconst pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/blog/\" } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Props extends PageProps {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      nodes: MarkdownRemarkNode[];\r\n    };\r\n    site: {\r\n      siteMetadata: {\r\n        title: string;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\n// TODO: compact/archive view\r\nconst Blog = ({ data, location }: Props) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\r\n  const posts = data.allMarkdownRemark.nodes;\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO title=\"Blog\" />\r\n      <PostList>\r\n        {posts.map((post: MarkdownRemarkNode) => (\r\n          <li key={post.fields.slug}>\r\n            <Link to={`/blog${post.fields.slug}`} itemProp=\"url\">\r\n              <PostListItem post={post} />\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </PostList>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport { Blog as default, pageQuery };\r\n","import styled from \"styled-components\";\r\n\r\nconst PostList = styled.ol`\r\n  list-style-type: none;\r\n  // remove default margin and padding of list\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nexport default PostList;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { spacing, fontSize } from \"../common\";\r\nimport theme from \"../common/theme\";\r\nimport { MarkdownRemarkNode } from \"../common/types\";\r\nimport { devices } from \"../common/breakpoints\";\r\n\r\nconst Header = styled.header`\r\n  margin-bottom: ${spacing[4]};\r\n`;\r\n\r\nconst Headline = styled.h2`\r\n  font-family: ${theme.fonts.serif};\r\n  font-size: ${fontSize[3]};\r\n  font-weight: lighter;\r\n  color: ${theme.colors.primary};\r\n  margin-bottom: ${spacing[1]};\r\n  margin-top: 0;\r\n`;\r\n\r\nconst Dateline = styled.p`\r\n  font-family: ${theme.fonts.serif};\r\n  font-size: ${fontSize[0]};\r\n`;\r\n\r\nconst Section = styled.section`\r\n  margin-bottom: 0;\r\n`;\r\n\r\nconst Description = styled.p``;\r\n\r\nconst Article = styled.article`\r\n  margin-bottom: ${spacing[4]};\r\n  margin-top: ${spacing[4]};\r\n  padding: ${spacing[4]};\r\n  border-radius: 4px;\r\n  color: ${theme.colors.text};\r\n\r\n  transition: background-color 0.1s;\r\n\r\n  background-color: ${theme.colors.backgroundLight};\r\n  @media ${devices.tablet_portrait} {\r\n    background-color: ${theme.colors.background};\r\n  }\r\n\r\n  // x:hover and x :hover are not the same.\r\n  &:hover {\r\n    background-color: ${theme.colors.backgroundLight};\r\n    ${Headline} {\r\n      color: ${theme.colors.primaryLight};\r\n    }\r\n    ${Dateline} {\r\n      color: ${theme.colors.textLight};\r\n    }\r\n    ${Description} {\r\n      color: ${theme.colors.textLight};\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  post: MarkdownRemarkNode;\r\n}\r\n\r\nconst PostListItem = ({ post }: Props) => {\r\n  const title = post.frontmatter.title || post.fields.slug;\r\n  return (\r\n    <Article itemScope itemType=\"http://schema.org/Article\">\r\n      <Header>\r\n        <Headline>\r\n          {/* relative link to e.g. /posts/post1-slug/ */}\r\n          <span itemProp=\"headline\">{title}</span>\r\n        </Headline>\r\n        <Dateline>{post.frontmatter.date}</Dateline>\r\n      </Header>\r\n      <Section>\r\n        <Description\r\n          dangerouslySetInnerHTML={{\r\n            __html: post.frontmatter.description || post.excerpt,\r\n          }}\r\n          itemProp=\"description\"\r\n        />\r\n      </Section>\r\n    </Article>\r\n  );\r\n};\r\n\r\nexport default PostListItem;\r\n"],"sourceRoot":""}